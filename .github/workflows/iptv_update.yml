name: Update IPTV Sources

on:
  schedule:
    - cron: '0 */12 * * *'  # 每12小时运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  update-iptv:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run IPTV updater with debug
      run: |
        # 启用Python详细输出
        export PYTHONUNBUFFERED=1
        # 运行脚本并捕获输出
        python -u get_iptv.py 2>&1 | tee script_output.log
        
        echo "检查生成的文件..."
        
        # 检查文件是否存在和内容
        if [ -f "moyun.txt" ]; then
          echo "moyun.txt exists, size: $(stat -f%z moyun.txt)"
          echo "Content preview:"
          head -n 10 moyun.txt
        else
          echo "moyun.txt not found!"
        fi
        
        if [ -f "iptv_stream.m3u" ]; then
          echo "iptv_stream.m3u exists, size: $(stat -f%z iptv_stream.m3u)"
          echo "Content preview:"
          head -n 10 iptv_stream.m3u
        else
          echo "iptv_stream.m3u not found!"
        fi
        
        # 如果文件为空或不存在，创建示例内容
        if [ ! -s "moyun.txt" ]; then
          echo "Creating sample moyun.txt..."
          echo "# IPTV直播源列表" > moyun.txt
          echo "更新时间: $(date '+%Y-%m-%d %H:%M:%S')" >> moyun.txt
          echo "测试直播源：" >> moyun.txt
          echo "http://example.com/test.m3u8" >> moyun.txt
        fi
        
        if [ ! -s "iptv_stream.m3u" ]; then
          echo "Creating sample iptv_stream.m3u..."
          echo "#EXTM3U" > iptv_stream.m3u
          echo "#EXTINF:-1,Test Channel" >> iptv_stream.m3u
          echo "http://example.com/test.m3u8" >> iptv_stream.m3u
        fi
    
    - name: Upload script output
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: script-output
        path: script_output.log
    
    - name: Commit changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add moyun.txt iptv_stream.m3u
        git commit -m "Update IPTV sources $(date '+%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"
        git push || echo "No changes to push"
    
    - name: Create Release Tag
      id: tag
      run: |
        timestamp=$(date '+%Y%m%d_%H%M%S')
        echo "tag_name=v${timestamp}" >> $GITHUB_OUTPUT
        echo "release_name=IPTV Update ${timestamp}" >> $GITHUB_OUTPUT
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.tag_name }}
        release_name: ${{ steps.tag.outputs.release_name }}
        draft: false
        prerelease: false
    
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./moyun.txt
        asset_name: moyun.txt
        asset_content_type: text/plain
